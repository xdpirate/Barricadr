<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dirPicker.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="lblExplanation.Text" xml:space="preserve">
    <value>Please select the root directory you want to create or remove firewall rules for. Barricadr will find every executable file within this directory (and subdirectories, if recursive scan is enabled).

"Block" will create rules to block all connections for found executables.
"Allow" will create rules to allow all connections for found executables.
"Restore" will remove all created rules for found executables.</value>
  </data>
  <data name="lblCautionText.Text" xml:space="preserve">
    <value>Use responsibly! Pointing this application at system directories can leave you without internet access. If you mess up, click the "Restore" button to restore the chosen directory. You can also hold the Shift key on your keyboard to turn the "Restore "button into a "Restore all" button which removes all Barricadr rules for all applications system-wide.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        cipq4AAAAABJRU5ErkJggg==
</value>
  </data>
</root>